require 'lib/scripts/input/hit_detectors'

go.property("id", 1)
go.property("size", 100)

function init(self)
	self.state = 0
	msg.post(".", "acquire_input_focus")
end

function on_message(self, message_id, message, sender)
    if message_id == hash("init") then 
        self.reciver =  message.reciver
    end

	if (message_id == hash("set")) then
		self.state = message.value
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		local hitted_go = raycast_hit_detector(vmath.vector3(action.x, action.y, 0), self.size, {hash("cell")})
		if hitted_go ~= nil then
			local cell_id = go.get(hitted_go .. '#cell', "id")
			if (cell_id == self.id) then
				msg.post(self.reciver, "pressed", { index = cell_id })
			end
		end
	end
end

function update(self, dt)
	local value = self.state
	if value == 0 then
		msg.post("#sprite", 'disable')
	elseif value > 0 then 
		msg.post("#sprite", 'enable')
		msg.post("#sprite", "play_animation", {id = hash("x")})
	elseif value < 0 then
		msg.post("#sprite", 'enable')
	msg.post("#sprite", "play_animation", {id = hash("o")}) 
	end
end